# Default values for awx.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Configure the AWX Web Docker image
image_web:
  name: web
  registry: docker.io
  repository: ansible/awx_web
  tag: 9.3.0
  pullPolicy: IfNotPresent
  replicaCount: 1
  kind: Deployment # Ideally Deployment and DaemonSet

# Configure the AWX Task Docker image
image_task:
  name: task
  registry: docker.io
  repository: ansible/awx_task
  tag: 9.3.0
  pullPolicy: IfNotPresent
  replicaCount: 1
  kind: Deployment # Ideally Deployment and DaemonSet

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

awxUsername: "administrator"
## AWX password
# awxPassword:


# Postgresql 
postgresql:
  image:
    registry: docker.io
    repository: bitnami/postgresql
    tag: 10
  persistence:
    enabled: false # Just for testing, change true when completed
    ## A manually managed Persistent Volume and Claim
    ## If defined, PVC must be created manually before volume will be bound
    ## The value is evaluated as a template, so, for example, the name can depend on .Release or .Chart
    ##
    # existingClaim:

    ## The path the volume will be mounted at, useful when using different
    ## PostgreSQL images.
    ##
    mountPath: /bitnami/postgresql

    ## The subdirectory of the volume to mount to, useful in dev environments
    ## and one PV for multiple services.
    ##
    subPath: ''

    # storageClass: "-"
    accessModes:
      - ReadWriteOnce
    size: 8Gi
    annotations: {}

# Memcached
memcached:
  service:
    ## Service type
    ##
    type: ClusterIP
    ## Memcached port
    ##
    port: 11211
    ## Specify the nodePort value for the LoadBalancer and NodePort service types.
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
    ##
    nodePort: ""
    ## Set the LoadBalancer service type to internal only.
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
    ##
    # loadBalancerIP:
    ## Annotations for the Memcached service
    ##
    annotations: {}

# RabbitMQ
rabbitmq:
  persistence:
    ## this enables PVC templates that will create one per pod
    ##
    enabled: false 

  auth:
    ## RabbitMQ application username
    ## ref: https://github.com/bitnami/bitnami-docker-rabbitmq#environment-variables
    ##
    username: guest
    ## RabbitMQ application password
    ## ref: https://github.com/bitnami/bitnami-docker-rabbitmq#environment-variables
    ##
    password: guest
    # existingPasswordSecret: name-of-existing-secret

  extraConfiguration: |-
    default_vhost = {{ .Release.Namespace }}-vhost

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - name: awx.local
      paths: /
  tls: []
  #  - secretName: awx-tls
  #    hosts:
  #      - awx.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi


nodeSelector: {}

tolerations: []

affinity: {}
